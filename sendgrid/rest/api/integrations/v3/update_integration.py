"""
  This code was generated by
 
  SENDGRID-OAI-GENERATOR
 
  Twilio SendGrid Integrations API
  Integrations allows you to connect your SendGrid applications with third-party services and forward SendGrid email events to those external applications. Currently, Integrations supports event forwarding to [Segment](https://segment.com/docs). You can use this API to create, delete, view, and update your Integrations.
 
  NOTE: This class is auto generated by OpenAPI Generator.
  https://openapi-generator.tech
  Do not edit the class manually.
"""

import json
import warnings
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated
from sendgrid.base import values
from sendgrid.exceptions import ApiException
from sendgrid.http.request import Request
from sendgrid.http.response import ApiResponse

from pydantic import Field, StrictStr
from typing_extensions import Annotated
from sendgrid.rest.api.integrations.v3.models.integration import Integration
from sendgrid.rest.api.integrations.v3.models.integration_patch import IntegrationPatch

class UpdateIntegration:
    def __init__(self, client) -> None:
        self.client = client
    
    def send(
        self,
            id: str,
    integration_patch: Optional[IntegrationPatch] = None,

    ):
        path='/v3/marketing/integrations/{id}'
        path = path.format(
        id=id,
        )

        data = None
        if integration_patch:
            data = integration_patch.to_dict()
        request = Request(
            method='PATCH',
            url=path,
            data=data,
            headers=headers
        )
        response=self.client.send(request)
        if response is None:
            raise ApiException(error="CreateAlert creation failed: Unable to connect to server")

        if response.text:
            text = json.loads(response.text)
        else:
            text = ""
        if response.is_success():
            return ApiResponse(status_code=response.status_code, model=text, headers=response.headers)
        else:
            raise ApiException(status_code=response.status_code, error=text, headers=response.headers)
